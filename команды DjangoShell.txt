1/Создать двух пользователей (с помощью метода User.objects.create_user('username')):

>>> user1= User.objects.create(username='Rose')
>>> user2 = User.objects.create(username='Lilit')


2/Создать два объекта модели Author, связанные с пользователями:

>>> from News.models import Author
>>> Author.objects.create(author_user=user1)
>>> Author.objects.create(author_user=user2)


3/Добавить 4 категории в модель Category.

>>> from News.models import Category
>>> Category.objects.create(name='travel')
>>> Category.objects.create(name='politics')
>>> Category.objects.create(name='business')
>>> Category.objects.create(name='entertainment')


4/Добавить 2 статьи и 1 новость.

>>> Post.objects.create(author=Author.objects.get(author_user=User.objects.get(username='Rose')), categoryType='AR', title='article title 1', text='article te
xt 1')
>>> Post.objects.create(author=Author.objects.get(author_user=User.objects.get(username='Lilit')), categoryType='AR', title='article title 2', text='article t
ext 2')
>>> Post.objects.create(author=Author.objects.get(author_user=User.objects.get(username='Lilit')), categoryType='NW', title='news title 3', text='news text 3')


5/Присвоить им категории (как минимум в одной статье/новости должно быть не меньше 2 категорий).

>>> p1 = Post.objects.get(pk=1)
>>> p2 = Post.objects.get(pk=2)
>>> p3 = Post.objects.get(pk=3)

>>> c1 = Category.objects.get(name='travel')
>>> c2 = Category.objects.get(name='politics')
>>> c3 = Category.objects.get(name='business')
>>> c4 = Category.objects.get(name='entertainment')

>>> p1.postCategory.add(c1)
>>> p2.postCategory.add(c2, c4)
>>> p3.postCategory.add(c1, c3)


6/Создать как минимум 4 комментария к разным объектам модели Post (в каждом объекте должен быть как минимум один комментарий).

>>> Comment.objects.create(commentUser=User.objects.get(username='Rose'), commentPost=Post.objects.get(pk=1), text='comment 1')
>>> Comment.objects.create(commentUser=User.objects.get(username='Rose'), commentPost=Post.objects.get(pk=2), text='comment 2')
>>> Comment.objects.create(commentUser=User.objects.get(username='Lilit'), commentPost=Post.objects.get(pk=2), text='comment 3')
>>> Comment.objects.create(commentUser=User.objects.get(username='Lilit'), commentPost=Post.objects.get(pk=3), text='comment 4')

7/Применяя функции like() и dislike() к статьям/новостям и комментариям, скорректировать рейтинги этих объектов.

>>> Post.objects.get(pk=1).like()
>>> Post.objects.get(pk=1).like()
>>> Post.objects.get(pk=2).like()
>>> Post.objects.get(pk=2).like()
>>> Post.objects.get(pk=2).like()
>>> Post.objects.get(pk=3).like()
>>> Post.objects.get(pk=2).dislike()
>>> Post.objects.get(pk=1).dislike()

>>> Comment.objects.get(pk=1).like()
>>> Comment.objects.get(pk=1).like()
>>> Comment.objects.get(pk=1).like()
>>> Comment.objects.get(pk=2).like()
>>> Comment.objects.get(pk=3).like()
>>> Comment.objects.get(pk=3).like()
>>> Comment.objects.get(pk=3).dislike()

8/Обновить рейтинги пользователей.

>>> Author.objects.get(author_user=User.objects.get(username='Rose')).update_rating()
>>> Author.objects.get(author_user=User.objects.get(username='Lilit')).update_rating()


9/Вывести username и рейтинг лучшего пользователя (применяя сортировку и возвращая поля первого объекта).

>>> Best_user = Author.objects.all().order_by('-rating_author').values('author_user__username', 'rating_author')[0]
>>> print(Best_user)
{'author_user__username': 'Lilit', 'rating_author': 10}


10/Вывести дату добавления, username автора, рейтинг, заголовок и превью лучшей статьи, основываясь на лайках/дислайках к этой статье.

>>> Best_post = Post.objects.all().order_by('-rating').values('dateCreation', 'author__author_user__username', 'rating', 'title')[0]
>>> print(Best_post)

11/Вывести все комментарии (дата, пользователь, рейтинг, текст) к этой статье.

>>> commentsBestPost = Comment.objects.filter(commentPost__id = bestPost.id).values('dateCreation', 'commentUser__username', 'rating', 'text')
>>> print(commentsBestPost)
<QuerySet [{'dateCreation': datetime.datetime(2025, 7, 2, 12, 52, 50, 430632, tzinfo=datetime.timezone.utc), 'commentUser__username': 'Rose', 'rating': 1, 'te
xt': 'comment 2'}, {'dateCreation': datetime.datetime(2025, 7, 2, 12, 53, 21, 54050, tzinfo=datetime.timezone.utc), 'commentUser__username': 'Lilit', 'rating': 1, 'text': 'comment 3'}]>
